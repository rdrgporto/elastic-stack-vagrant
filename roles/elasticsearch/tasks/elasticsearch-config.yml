- name: Replace elasticsearch.yml
  ansible.builtin.template:
    src: elasticsearch.j2
    dest: /etc/elasticsearch/elasticsearch.yml
    owner: root
    group: elasticsearch
    mode: '0660'

- name: Replace jvm.options
  ansible.builtin.template:
    src: jvm.options.j2
    dest: /etc/elasticsearch/jvm.options
    owner: root
    group: elasticsearch
    mode: '0660'

- name: Set memory limit to infinity
  ansible.builtin.blockinfile:
    dest: /usr/lib/systemd/system/elasticsearch.service
    insertafter: "^EnvironmentFile"
    block: |
        LimitMEMLOCK=infinity

- name: Reload Systemd
  ansible.builtin.systemd:
    daemon_reload: true

- name: Set elastic username password
  ansible.builtin.expect:
    command: /usr/share/elasticsearch/bin/elasticsearch-keystore add bootstrap.password
    responses:
      "Enter value for bootstrap.password:": "{{ elasticsearch_password }}"
    creates: /var/lib/elasticsearch/ansible-idempotency

- name: Create certificates directory
  ansible.builtin.file:
    path: /etc/elasticsearch/certificates
    state: directory
    owner: root
    group: elasticsearch
    mode: '0750'

- name: Copy Elasticsearch certificates
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "/etc/elasticsearch/certificates/{{ item }}"
    owner: root
    group: elasticsearch
    mode: '0644'
  with_items:
    - "{{ elasticsearch_certificate }}"
    - "{{ elasticsearch_certificate_key }}"
    - "{{ elasticsearch_certificate_ca }}"

- name: Start Elasticsearch
  ansible.builtin.service:
    name: elasticsearch
    state: started

- name: Check Elasticsearch status
  ansible.builtin.uri:
    url: "https://localhost:{{ elasticsearch_port }}/_cluster/health"
    method: GET
    user: "{{ elasticsearch_username }}"
    password: "{{ elasticsearch_password }}"
    force_basic_auth: true
    validate_certs: false
  until: "response.status == 200"
  retries: 20
  delay: 15
  register: response

- name: Print information from the previous task
  ansible.builtin.debug:
    var: response
